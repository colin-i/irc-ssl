on:
 workflow_dispatch:
  inputs:
   branch:
    description: "another branch"
env:
 #for gh and for upload
 GITHUB_TOKEN: ${{ secrets.PAT }}
jobs:
 takescreen:
  runs-on: ${{ matrix.os }}
  strategy:
   matrix:
    os: [ubuntu-22.04, ubuntu-24.04]
  steps:
   - uses: actions/checkout@master
   - name: Run a multi-line script
     run: |
      #proj
      name=`cat debian/changelog | head -1 | grep -o ^[^\ ]*`
      #get appimage artifact
      branch=${{ github.event.inputs.branch }}
      if [ -z "${branch}" ]; then
       branch=$(git rev-parse --abbrev-ref HEAD)
      fi
      echo ${branch}
      id=$(gh run list --workflow=appimage.yml -b ${branch} | cut -f7 | head -1)
      repo_at_gh=`cat debian/control | grep "^Homepage" | grep -o "[^/]*$"`
      #
      url=`gh api -H "Accept: application/vnd.github.v3+json" /repos/colin-i/${repo_at_gh}/actions/runs/${id}/artifacts | jq ".artifacts[0].archive_download_url"`
      url=${url:1:-1}
      echo ${url}
      curl -L -H "Authorization: token ${{ secrets.PAT }}" ${url} --output a.zip
      unzip ./a.zip

      sudo apt-get install -y libfuse2`if [ ${{ matrix.os }} = "ubuntu-24.04" ]; then echo -n t64; fi` #xvfb is already
      #export DISPLAY=:0

      #dependencies test, if screen was working here then no broadway
      sudo Xvfb :1 -screen 0 1920x1080x8 &
      sleep 5
      {
       sleep 5 && \
       #import -window root -display :1 -screen screenshot.png #imagemagick is on noble
       id=`ps aux | grep Xvfb | grep -v grep | tr -s ' ' | cut -f2 -d' '` && \
       echo id=$id && \
       sudo kill -s 9 ${id} && \
       #export recon=9 #useless
       touch recon
      } &
      DISPLAY=:1 ./${name}.AppImage || {
       if [ -e ./recon ]; then echo ok
       else exit 1; fi
      }

      sudo apt install -y libgtk-3-bin npm libnss3
      npm install puppeteer
      cat > capture.js <<EOF
      const puppeteer = require('puppeteer');
      async function captureBroadwayScreenshot(url, outputPath) {
        const browser = await puppeteer.launch({ args: ['--no-sandbox'] });
        const page = await browser.newPage();
        await page.goto(url);
        await page.screenshot({ path: outputPath });
        await browser.close();
      }
      captureBroadwayScreenshot('http://localhost:8080', 'screenshot.png');
      EOF
      #port 8080+DISPLAY at default
      DISPLAY=:0 broadwayd -p 8080 &
      sleep 10
      GDK_BACKEND=broadway BROADWAY_DISPLAY=:0 ./${name}.AppImage -d 200x200 &
      sleep 10
      node capture.js
   - name: upload artifact
     uses: actions/upload-artifact@master
     with:
      name: screenshot-${{ matrix.os }}
      path: screenshot.png
